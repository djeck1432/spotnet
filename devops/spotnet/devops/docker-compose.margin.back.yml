networks:
  app_network:
    driver: bridge

services:
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=spotnet
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: "postgres -c max_connections=150
      -c shared_buffers=512MB -c effective_cache_size=1536MB
      -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
      -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
      -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
      -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1"
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d spotnet"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ../margin/margin_app
    restart: always
    volumes:
      - ../margin/margin_app:/src
    env_file:
      - /home/sergey/spotnet/devops/spotnet/margin/margin_app/.env
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=spotnet
      - DATABASE_URL=postgresql://user:password@db:5432/spotnet
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app_network

volumes:
  pgdata: {}
