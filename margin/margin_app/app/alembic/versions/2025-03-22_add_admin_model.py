"""Add admin model

Revision ID: 8f73c45f2caa
Revises: a1b2c3d4e5f6
Create Date: 2025-03-22 20:55:47.446843

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8f73c45f2caa'
down_revision: Union[str, None] = 'a1b2c3d4e5f6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Create admin models on upgrade"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column(
           'email', sa.String(length=255), 
           nullable=False, comment='The unique email address of the admin.'
       ),
    sa.Column('name', sa.String(length=255), nullable=False, comment='The full name of the admin.'),
    sa.Column(
           'is_super_admin', sa.Boolean(), nullable=False, 
           comment='Indicates if the admin has super admin privileges.'
       ),
    sa.Column(
           'password', sa.String(length=255), nullable=False, 
           comment='The hashed password of the admin.'
       ),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Drop admin models on downgrade"""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('order', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))

    op.drop_table('admins')
    # ### end Alembic commands ###
