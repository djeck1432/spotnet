name: MarginApp Tests

on:  
  push:
    paths:
      - 'margin_app/'
      - '.github/workflows/'
  pull_request:
    paths:
      - 'margin_app/'
      - '.github/workflows/'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: margin_test
          POSTGRES_USER: margin_user
          POSTGRES_PASSWORD: margin_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.0
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: margin_app/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        working-directory: ./margin_app
        run: poetry install --no-interaction

      - name: Create .env file
        working-directory: ./margin_app
        run: |
          cp .env.example .env
          sed -i 's/DATABASE_URL=.*/DATABASE_URL=postgresql:\/\/margin_user:margin_password@localhost:5432\/margin_test/' .env

      - name: Run migrations
        working-directory: ./margin_app
        run: |
          poetry run alembic upgrade head

      - name: Run tests
        working-directory: ./margin_app
        run: |
          poetry run pytest app/tests/ -v --cov=app --cov-report=term-missing


  